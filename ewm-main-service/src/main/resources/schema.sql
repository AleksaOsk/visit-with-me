drop table if exists users CASCADE;
drop table if exists categories CASCADE;
drop table if exists events CASCADE;
drop table if exists compilations CASCADE;
drop table if exists event_compilation CASCADE;
drop table if exists event_requests CASCADE;

create table if not exists users(
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    name VARCHAR(250) NOT NULL,
    email VARCHAR(254) NOT NULL
);

create table if not exists categories(
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    name VARCHAR(50) NOT NULL
);

create table if not exists events(
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    annotation VARCHAR(2000) NOT NULL,
    title VARCHAR(120) NOT NULL,
    confirmed_requests INT NOT NULL,
    created_on TIMESTAMP WITHOUT TIME ZONE,
    description VARCHAR(7000) NOT NULL,
    event_date TIMESTAMP WITHOUT TIME ZONE,
    published_on TIMESTAMP WITHOUT TIME ZONE,
    state VARCHAR (20) NOT NULL,
    request_moderation BOOLEAN NOT NULL,
    participant_limit INT NOT NULL,
    paid BOOLEAN NOT NULL,
    lat DOUBLE PRECISION NOT NULL,
    lon DOUBLE PRECISION NOT NULL,
    initiator_id BIGINT NOT NULL,
    category_id BIGINT NOT null,
    FOREIGN KEY (initiator_id) REFERENCES users(id),
    FOREIGN KEY (category_id) REFERENCES categories(id)
);

create table if not exists compilations(
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    pinned BOOLEAN NOT NULL,
    title TEXT NOT NULL
);

create table if not exists event_compilation(
 	event_id bigint not null,
    compilation_id bigint not null,
    primary key (event_id, compilation_id),
    foreign key (event_id) references events(id),
    foreign key (compilation_id) references compilations(id)
);

create table if not exists event_requests(
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
 	event_id bigint not null,
 	requester_id bigint not null,
    created TIMESTAMP WITHOUT TIME ZONE,
    status VARCHAR (10) NOT NULL,
    foreign key (event_id) references events(id),
    foreign key (requester_id) references users(id)
);